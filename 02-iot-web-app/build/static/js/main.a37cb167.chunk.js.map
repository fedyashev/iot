{"version":3,"sources":["components/Header.js","components/Login.js","components/Registrate.js","components/User.js","components/Data.js","components/Device.js","components/DeviceList.js","components/DeviceDelete.js","components/DeviceRename.js","components/Sensor.js","components/SensorCreate.js","components/SensorEdit.js","components/SensorDelete.js","components/Main.js","components/Alert.js","lib/api.js","App.js","index.js"],"names":["Header","props","user","onLogout","react_default","a","createElement","className","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","username","onClick","e","preventDefault","Login","password","onLogin","onSubmit","value","htmlFor","placeholder","ref","Registrate","email","confirmPassword","onSubmitRegistrateForm","setErrorMessage","input","aria-describedby","User","concat","_id","data_token","devices","length","TableRow","device_id","sensor_id","_props$data","data","date","device","sensor","units","onRefreshSensorData","Date","toLocaleString","timeZone","hour12","name","Data","onRefreshAllData","scope","style","fontSize","map","sensors","Data_TableRow","key","lastData","DeviceNav","DeviceInfo","DeviceSensorsTable","onRefreshDeviceData","Device","Device_DeviceNav","Device_DeviceInfo","Device_DeviceSensorsTable","CreateDeviceForm","onCreateNewDevice","DeviceTableRow","aria-haspopup","aria-labelledby","DeviceTable","DeviceList_DeviceTableRow","DeviceList","DeviceList_CreateDeviceForm","DeviceList_DeviceTable","DeviceDelete","onDeleteDevice","onClickDeleteDevice","isSubmit","DeviceRenameForm","onRenameDevice","defaultValue","DeviceRename","DeviceRename_DeviceRenameForm","SensorNav","_props$match$params","match","params","onClickRefreshSensorData","SensorInfo","Sensor","Sensor_SensorNav","Sensor_SensorInfo","CreateSensorForm","onCreateSensor","SensorCreate","SensorCreate_CreateSensorForm","SensorEditForm","onEditSensor","SensorEdit","SensorEdit_SensorEditForm","SensorDelete","onDeleteSensor","onClickDeleteSensor","Main","Switch","Route","path","render","components_Login","Object","assign","components_Registrate","exact","components_Data","components_User","components_DeviceList","components_Device","find","d","components_SensorCreate","components_DeviceDelete","components_DeviceRename","components_Sensor","s","components_SensorEdit","components_SensorDelete","Alert","message","onAlertClose","role","data-dismiss","aria-hidden","api","login","opt","method","headers","Content-Type","body","JSON","stringify","fetch","then","res","promise","json","ok","err","Error","logout","user_id","session_token","registrate","getUserById","url","getDeviceList","createNewDevice","deleteDevice","createNewSensor","renameDevice","editSensor","deleteSensor","getSensorInfoById","getDeviceInfoById","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlerLogin","setState","history","push","catch","handlerLogout","handlerAlertClose","handleSubmitRegistrateForm","handleCreateNewDevice","state","toConsumableArray","newUser","objectSpread","handleDeleteDevice","_this$state","filter","goBack","isAuthenticated","handleCreateNewSensor","_this$state2","handleRenameDevice","_this$state3","handleEditSensor","_this$state4","newSensor","handleDeleteSensor","_this$state5","result","handlerRefreshAllData","_this$state6","handleRefreshSensorData","_this$state7","handleRefreshDeviceData","_this$state8","_this$state9","components_Header","components_Alert","components_Main","Component","withRouter","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a37cb167.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n    const {user, onLogout} = props;\r\n\r\n    const onClickLogout = e => {\r\n        e.preventDefault();\r\n        onLogout();\r\n    };\r\n\r\n    return (\r\n        <header className=\"mb-3\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark rounded-bottom\">\r\n                <span >\r\n                    <Link className=\"navbar-brand\" to={user ? '/user' : '/login'}>IoT</Link>\r\n                </span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    {\r\n                        user ?\r\n                            (\r\n                                <ul className=\"navbar-nav\">\r\n                                    <li className=\"nav-item\">\r\n                                        <Link className=\"nav-link\" to={`/device`}>Devices</Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <Link className=\"nav-link\" to={`/data`}>Data</Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <Link className=\"nav-link\" to={`/user`}>\r\n                                            <span className=\"text-warning font-weight-bold\">\r\n                                                {user.username}\r\n                                            </span>\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <Link className=\"nav-link\" to='/logout' onClick={onClickLogout}>Logout</Link>\r\n                                    </li>\r\n                                </ul>\r\n                            ) :\r\n                            (\r\n                                <ul className=\"navbar-nav\">\r\n                                    <li className=\"nav-item\">\r\n                                        <Link className=\"nav-link\" to='/login'>Login</Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <Link className=\"nav-link\" to='/registrate'>Registrate</Link>\r\n                                    </li>\r\n                                </ul>\r\n                            )\r\n                    }\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Login = props => {\r\n    let username, password;\r\n    const {onLogin} = props;\r\n    const onFormSubmit = e => {\r\n        e.preventDefault();\r\n        onLogin(username.value, password.value);\r\n    };\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className='col-sm-12 col-md-8 col-lg-6 col-lx-4'>\r\n                <form className=\"bg-light border rounded p-3\" onSubmit={onFormSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"usernameInput\">Username</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"usernameInput\" placeholder=\"Username\" ref={ref => username = ref}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"passwordInput\">Password</label>\r\n                        <input type=\"password\" className=\"form-control\" id=\"passwordInput\" placeholder=\"Password\" ref={ref => password = ref}/>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nconst Registrate = props => {\r\n    let username, email, password, confirmPassword;\r\n    const {onSubmitRegistrateForm, setErrorMessage} = props;\r\n    const onSubmitForm = e => {\r\n        e.preventDefault();\r\n        if (password.value !== confirmPassword.value) {\r\n            setErrorMessage('Password is not confirmed.');\r\n        }\r\n        else {\r\n            onSubmitRegistrateForm(username.value, password.value, email.value);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className='col-6'>\r\n                <form className=\"bg-light border rounded p-3\" onSubmit={onSubmitForm}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"usernameInput\">Username</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"usernameInput\" placeholder=\"Username\" ref={input => username = input}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"emailInput\">Email address</label>\r\n                        <input type=\"email\" className=\"form-control\" id=\"emailInput\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" ref={input => email = input}/>\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"passwordInput\">Password</label>\r\n                        <input type=\"password\" className=\"form-control\" id=\"passwordInput\" placeholder=\"Password\" ref={input => password = input}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"conformPasswordInput\">Confirm password</label>\r\n                        <input type=\"password\" className=\"form-control\" id=\"conformPasswordInput\" placeholder=\"Confirm password\" ref={input => confirmPassword = input}/>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Registrate;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst User = props => {\r\n    const {user} = props;\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className='col'>\r\n                {\r\n                    user ?\r\n                        (\r\n                            <ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">{`user_id: ${user._id}`}</li>\r\n                                <li className=\"list-group-item\">{`username: ${user.username}`}</li>\r\n                                <li className=\"list-group-item\">{`email: ${user.email}`}</li>\r\n                                <li className=\"list-group-item\">{`data_token: ${user.data_token}`}</li>\r\n                                <li className=\"list-group-item\">\r\n                                    <span><Link to='/device'>Devices</Link> {user.devices.length}</span>\r\n                                </li>\r\n                            </ul>\r\n                        ):\r\n                        (\r\n                            <p className=\"h1 text-danger\">User data not found</p>\r\n                        )\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst TableRow = props => {\r\n    const {date, device, sensor, value, units} = props.data;\r\n    const {onRefreshSensorData} = props;\r\n    const onClickRefreshSensorData = (device_id, sensor_id) => e => {\r\n        e.preventDefault();\r\n        onRefreshSensorData(device_id, sensor_id);\r\n    }\r\n    return (\r\n        <tr>\r\n            <td className=\"text-center align-middle\">\r\n                <button className=\"btn btn-sm btn-secondary p-2\" onClick={onClickRefreshSensorData(device._id, sensor._id)}>{' '}</button>\r\n            </td>\r\n            <td className=\"text-center align-middle\">\r\n                {date ? (new Date(date)).toLocaleString('en-US', {timeZone: 'Europe/Minsk', hour12: false}) : '---'}\r\n            </td>\r\n            <td className=\"text-center align-middle\">\r\n                <Link to={`/device/${device._id}`}>{device.name}</Link>\r\n            </td>\r\n            <td className=\"text-center align-middle\">\r\n                <Link to={`/device/${device._id}/sensor/${sensor._id}`}>{sensor.name}</Link>\r\n            </td>\r\n            <td className=\"text-center align-middle\">\r\n                {value || '---'}\r\n            </td>\r\n            <td className=\"text-center align-middle\">{units}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nconst Data = props => {\r\n    const {user, onRefreshAllData, onRefreshSensorData} = props;\r\n    const onClickRefreshAllData = e => {\r\n        e.preventDefault();\r\n        onRefreshAllData();\r\n    };\r\n    return(\r\n        <div className=\"table-responsive\">\r\n            <table className=\"table table-bordered table-hover table-sm\">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\" className=\"text-center\">\r\n                            <button className=\"btn btn-sm btn-secondary p-2\" onClick={onClickRefreshAllData}>{' '}</button>\r\n                        </th>\r\n                        <th scope=\"col\" className=\"text-center\">Date</th>\r\n                        <th scope=\"col\" className=\"text-center\">Device</th>\r\n                        <th scope=\"col\" className=\"text-center\">Sensor</th>\r\n                        <th scope=\"col\" className=\"text-center\">Value</th>\r\n                        <th scope=\"col\" className=\"text-center\">Units</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody style={{fontSize: '0.85rem'}}>\r\n                    {\r\n                        user && user.devices && user.devices.map(device => device.sensors.map(sensor => \r\n                            <TableRow key={`${sensor._id}-${sensor.lastData ? sensor.lastData.date : 'null'}`} data={\r\n                                    {\r\n                                        date: sensor.lastData ? sensor.lastData.date : null,\r\n                                        device: device,\r\n                                        sensor: sensor,\r\n                                        value: sensor.lastData ? sensor.lastData.value : null,\r\n                                        units: sensor.units\r\n                                    }\r\n                                }\r\n                                onRefreshSensorData={onRefreshSensorData}\r\n                            />\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nData.propTypes = {\r\n    user: PropTypes.object\r\n}\r\n\r\nexport default Data;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst DeviceNav = props => {\r\n    const {device} = props;\r\n    return (\r\n        <nav className=\"nav mb-3\">\r\n            <Link to={`/device/${device._id}/createSensor`} className=\"nav-link\">Add sensor</Link>\r\n            <Link to={`/device/${device._id}/renameDevice`} className=\"nav-link\">Rename</Link>\r\n            <Link to={`/device/${device._id}/deleteDevice`} className=\"nav-link\">Delete</Link>\r\n        </nav>\r\n    );\r\n};\r\n\r\nconst DeviceInfo = props => {\r\n    const {device} = props;\r\n    return (\r\n        <div className=\"mb-3\">\r\n            <p className=\"h3 text-center mb-1\">Device info</p>\r\n            <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item p-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4 col-md-2 col-lg-2\">device_id:</div>\r\n                        <div className=\"col-8 col-md-10 col-lg-10\">{device._id}</div>\r\n                    </div>\r\n                </li>\r\n                <li className=\"list-group-item p-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4 col-md-2 col-lg-2\">name:</div>\r\n                        <div className=\"col-8 col-md-10 col-lg-10\">{device.name}</div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DeviceSensorsTable = props => {\r\n    const {device, onRefreshSensorData, onRefreshDeviceData} = props;\r\n    const onClickRefreshSensorData = (device_id, sensor_id) => e => {\r\n        e.preventDefault();\r\n        onRefreshSensorData(device_id, sensor_id);\r\n    }\r\n    const onClickRefreshDeviceData = e => {\r\n        e.preventDefault();\r\n        onRefreshDeviceData(device._id);\r\n    }\r\n    return (\r\n        <div className=\"table-responsive\">\r\n            <p className=\"h3 text-center mb-1\">Sensors list</p>\r\n            <table className=\"table table-bordered table-hover table-sm\">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\" className=\"text-center\">\r\n                            <button className=\"btn btn-sm btn-secondary p-2\" onClick={onClickRefreshDeviceData}>{' '}</button>\r\n                        </th>\r\n                        <th scope=\"col\" className=\"text-center\">Name</th>\r\n                        <th scope=\"col\" className=\"text-center\">Units</th>\r\n                        <th scope=\"col\" className=\"text-center\">Value</th>\r\n                        <th scope=\"col\" className=\"text-center\">Date</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody style={{fontSize: '0.85rem'}}>\r\n                    {\r\n                        device && device.sensors.map(sensor => \r\n                            <tr key={sensor._id}>\r\n                                <td className=\"text-center\">\r\n                                    <button className=\"btn btn-sm btn-secondary p-2\" onClick={onClickRefreshSensorData(device._id, sensor._id)}>{' '}</button>\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                    <Link to={`/device/${device._id}/sensor/${sensor._id}`}>{sensor.name}</Link>\r\n                                </td>\r\n                                <td className=\"text-center\">{sensor.units}</td>\r\n                                <td className=\"text-center\">{sensor.lastData ? sensor.lastData.value : '---'}</td>\r\n                                <td className=\"text-center\">{sensor.lastData ? (new Date(sensor.lastData.date)).toLocaleString('en-US', {timeZone: 'Europe/Minsk', hour12: false}) : '---'}</td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Device = props => {\r\n    return (\r\n        <section>\r\n            <DeviceNav {...props}/>\r\n            <DeviceInfo {...props}/>\r\n            <DeviceSensorsTable {...props}/>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Device;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst CreateDeviceForm = props => {\r\n    const {onCreateNewDevice} = props;\r\n    let name;\r\n    const onClickCreateNewDevice = e => {\r\n        e.preventDefault();\r\n        onCreateNewDevice(name.value);\r\n        name.value = \"\";\r\n    };\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"New device name\" aria-label=\"New device name\" aria-describedby=\"btnCreateNewDevice\" ref={ref => name = ref}/>\r\n            <div className=\"input-group-append\">\r\n                <button className=\"btn btn-success\" type=\"button\" id=\"btnCreateNewDevice\" onClick={onClickCreateNewDevice}>Create</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DeviceTableRow = props => {\r\n    const {device} = props;\r\n    return(\r\n        <tr>\r\n            <td className=\"text-center\">\r\n                <Link to={`/device/${device._id}`}>{device.name}</Link>\r\n            </td>\r\n            <td className=\"text-center\">{device.sensors.length}</td>\r\n            <td className=\"text-center\">\r\n                <div className=\"dropdown ml-auto\">\r\n                    <button className=\"btn btn-secondary btn-sm dropdown-toggle\" type=\"button\" id={`dropdownMenu-device-${device._id}`} data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        Action\r\n                    </button>\r\n                    <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby={`dropdownMenu-device-${device._id}`}>\r\n                        <Link to={`/device/${device._id}/createSensor`} className=\"dropdown-item\">Add sensor</Link>\r\n                        <Link to={`/device/${device._id}/renameDevice`} className=\"dropdown-item\">Rename</Link>                        \r\n                        <Link to={`/device/${device._id}/deleteDevice`} className=\"dropdown-item\">Delete</Link>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nconst DeviceTable = props => {\r\n    const {user} = props;\r\n    return (\r\n        <table className=\"table table-bordered table-hover table-sm\">\r\n            <thead className=\"thead-dark\">\r\n                <tr>\r\n                    <th scope=\"col\" className=\"text-center\">Device</th>\r\n                    <th scope=\"col\" className=\"text-center\">Sensors</th>\r\n                    <th scope=\"col\" className=\"text-center\">Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody style={{fontSize: '0.85rem'}}>\r\n                {\r\n                    user && user.devices && user.devices.map(\r\n                        device => <DeviceTableRow key={device._id} device={device}/>\r\n                    )\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nconst DeviceList = props => {\r\n    const {user, onCreateNewDevice} = props;\r\n    return (\r\n        <div>\r\n            <CreateDeviceForm onCreateNewDevice={onCreateNewDevice}/>\r\n            {\r\n                user && <DeviceTable user={user}/>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeviceList;","import React from 'react';\r\n\r\nconst DeviceDelete = props => {\r\n    const {device, onDeleteDevice} = props;\r\n    const onClickDeleteDevice = isSubmit => e => {\r\n        e.preventDefault();\r\n        onDeleteDevice(device._id, isSubmit);\r\n    };\r\n    return (\r\n        <div className=\"border p-5\">\r\n            <div className=\"mb-5\">\r\n                <p className=\"h3 text-center\">{`Delete device ${device.name}?`}</p>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div className=\"ml-5\">\r\n                    <button className=\"btn btn-success\" onClick={onClickDeleteDevice(true)}>Yes</button>\r\n                </div>\r\n                <div className=\"mr-5\">\r\n                    <button className=\"btn btn-danger\" onClick={onClickDeleteDevice(false)}>No</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeviceDelete;","import React from 'react';\r\n\r\nconst DeviceRenameForm = props => {\r\n    const {device, onRenameDevice} = props;\r\n    let name;\r\n    const onClickRenameDevice = e => {\r\n        e.preventDefault();\r\n        onRenameDevice(device._id, name.value);\r\n    };\r\n    return (\r\n        <div>\r\n            <p className=\"h3 text-center\">{`Enter new device name`}</p>\r\n            <div className=\"input-group mb-3\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"New device name\" aria-label=\"New device name\" aria-describedby=\"btnCreateNewDevice\" ref={ref => name = ref} defaultValue={device.name}/>\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-success\" type=\"button\" id=\"btnCreateNewDevice\" onClick={onClickRenameDevice}>Rename</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DeviceRename = props => {\r\n    const {device, onRenameDevice} = props;\r\n    return (\r\n        <DeviceRenameForm device={device} onRenameDevice={onRenameDevice}/>\r\n    );\r\n};\r\n\r\nexport default DeviceRename;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst SensorNav = props => {\r\n    const {device_id, sensor_id} = props.match.params;\r\n    const {onRefreshSensorData} = props;\r\n    const onClickRefreshSensorData = (device_id, sensor_id) => e => {\r\n        e.preventDefault();\r\n        onRefreshSensorData(device_id, sensor_id);\r\n    }\r\n    return (\r\n        <nav className=\"nav mb-2\">\r\n            <Link to={`/device/${device_id}/sensor/${sensor_id}/editSensor`} className=\"nav-link\">Edit</Link>\r\n            <Link to={`/device/${device_id}/sensor/${sensor_id}/deleteSensor`} className=\"nav-link\">Delete</Link>\r\n            <Link to={''} className=\"nav-link\" onClick={onClickRefreshSensorData(device_id, sensor_id)}>Refresh</Link>\r\n        </nav>\r\n    );\r\n};\r\n\r\nconst SensorInfo = props => {\r\n    const {sensor} = props;\r\n    return (\r\n        <div>\r\n            <p className=\"h3 text-center mb-1\">Sensor info</p>\r\n            <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item p-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4 col-md-2 col-lg-2\">sensor_id:</div>\r\n                        <div className=\"col-8 col-md-10 col-lg-10\">{sensor._id}</div>\r\n                    </div>\r\n                </li>\r\n                <li className=\"list-group-item p-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4 col-md-2 col-lg-2\">name:</div>\r\n                        <div className=\"col-8 col-md-10 col-lg-10\">{sensor.name}</div>\r\n                    </div>\r\n                </li>\r\n                <li className=\"list-group-item p-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4 col-md-2 col-lg-2\">units:</div>\r\n                        <div className=\"col-8 col-md-10 col-lg-10\">{sensor.units}</div>\r\n                    </div>\r\n                </li>\r\n                <li className=\"list-group-item p-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4 col-md-2 col-lg-2\">date:</div>\r\n                        <div className=\"col-8 col-md-10 col-lg-10\">{sensor.lastData ? (new Date(sensor.lastData.date)).toLocaleString('en-US', {timeZone: 'Europe/Minsk', hour12: false}) : '---'}</div>\r\n                    </div>\r\n                </li>\r\n                <li className=\"list-group-item p-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4 col-md-2 col-lg-2\">value:</div>\r\n                        <div className=\"col-8 col-md-10 col-lg-10\">{sensor.lastData ? sensor.lastData.value: '---'}</div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nconst Sensor = props => {\r\n    return(\r\n        <section>\r\n            <SensorNav {...props}/>\r\n            <SensorInfo {...props}/>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Sensor;","import React from 'react';\r\n\r\nconst CreateSensorForm = props => {\r\n    const {onCreateSensor, device_id} = props;\r\n    const onClickCreateSensor = e => {\r\n        e.preventDefault();\r\n        onCreateSensor(device_id, name.value, units.value);\r\n    };\r\n    let name, units;\r\n    return (\r\n        <div className=\"mb-2\">\r\n            <div className=\"text-center\">\r\n                <span className=\"h4\">Create a new sensor</span>\r\n            </div>\r\n            <div className=\"input-group \">\r\n                <input type=\"text\" className=\"form-control w-50\" placeholder=\"Sensor name\" ref={ref => name = ref}/>\r\n                <input type=\"text\" className=\"form-control mx-2\" placeholder=\"Units\" ref={ref => units = ref}/>\r\n                <button className=\"btn btn-primary\" onClick={onClickCreateSensor}>Create</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst SensorCreate = props => {\r\n    const {onCreateSensor} = props;\r\n    const device_id = props.match.params.device_id;\r\n    return (\r\n        <CreateSensorForm onCreateSensor={onCreateSensor} device_id={device_id}/>\r\n    );\r\n};\r\n\r\nexport default SensorCreate;","import React from 'react';\r\n\r\nconst SensorEditForm = props => {\r\n    const {sensor, onEditSensor} = props;\r\n    const device_id = props.match.params.device_id;\r\n    let name, units;\r\n    const onClickEditSensor = e => {\r\n        e.preventDefault();\r\n        onEditSensor(device_id, sensor._id, name.value, units.value);\r\n    }\r\n    return (\r\n        <div>\r\n            <p className=\"h3 text-center mb-1\">{`Edit sensor: ${sensor.name}`}</p>\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"inputName\" className=\"col-sm-2 col-form-label\">Name</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"inputName\" placeholder=\"New name\" defaultValue={sensor.name} ref={ref => name = ref}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"inputUnits\" className=\"col-sm-2 col-form-label\">Units</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"inputUnits\" placeholder=\"New units\" defaultValue={sensor.units} ref={ref => units = ref}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-10\">\r\n                        <button className=\"btn btn-primary\" onClick={onClickEditSensor}>Update</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst SensorEdit = props => {\r\n    return(\r\n        <SensorEditForm {...props}/>\r\n    );\r\n};\r\n\r\nexport default SensorEdit;","import React from 'react';\r\n\r\nconst SensorDelete = props => {\r\n    const {sensor, onDeleteSensor} = props;\r\n    const device_id = props.match.params.device_id;\r\n    const onClickDeleteSensor = isSubmit => e => {\r\n        e.preventDefault();\r\n        onDeleteSensor(device_id, sensor._id, isSubmit);\r\n    };\r\n    return (\r\n        <div className=\"border p-5\">\r\n            <div className=\"mb-5\">\r\n                <p className=\"h3 text-center\">{`Delete sensor ${sensor.name}?`}</p>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div className=\"ml-5\">\r\n                    <button className=\"btn btn-success\" onClick={onClickDeleteSensor(true)}>Yes</button>\r\n                </div>\r\n                <div className=\"mr-5\">\r\n                    <button className=\"btn btn-danger\" onClick={onClickDeleteSensor(false)}>No</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SensorDelete;","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\n\r\nimport Login from './Login';\r\nimport Registrate from './Registrate';\r\n\r\nimport User from './User';\r\nimport Data from './Data';\r\n\r\nimport Device from './Device';\r\nimport DeviceList from './DeviceList';\r\nimport DeviceDelete from './DeviceDelete';\r\nimport DeviceRename from './DeviceRename';\r\n\r\nimport Sensor from './Sensor';\r\nimport SensorCreate from './SensorCreate';\r\nimport SensorEdit from './SensorEdit';\r\nimport SensorDelete from './SensorDelete';\r\n\r\nconst Main = props => {\r\n    const {\r\n        user,\r\n        setErrorMessage,\r\n        onLogin,\r\n        onSubmitRegistrateForm,\r\n        onCreateNewDevice,\r\n        onDeleteDevice,\r\n        onCreateSensor,\r\n        onRenameDevice,\r\n        onEditSensor,\r\n        onDeleteSensor,\r\n        onRefreshAllData,\r\n        onRefreshSensorData,\r\n        onRefreshDeviceData\r\n    } = props;\r\n    return (\r\n        <main>\r\n            <Switch>\r\n                <Route path='/login' render={props => <Login {...props} onLogin={onLogin}/>}/>\r\n                <Route path='/registrate' render={props =>\r\n                    <Registrate {...props}\r\n                        onSubmitRegistrateForm={onSubmitRegistrateForm}\r\n                        setErrorMessage={setErrorMessage}/>\r\n                }/>\r\n                <Route exact path='/data' render={props => <Data {...props} user={user} onRefreshAllData={onRefreshAllData} onRefreshSensorData={onRefreshSensorData}/>}/>\r\n                <Route exact path='/user' render={props => <User {...props} user={user}/>}/>\r\n                <Route exact path='/device' render={props => <DeviceList {...props} user={user} onCreateNewDevice={onCreateNewDevice}/>}/>\r\n                <Route exact path='/device/:device_id' render={props => user && <Device {...props} device={user.devices.find(d => d._id === props.match.params.device_id)} onRefreshSensorData={onRefreshSensorData} onRefreshDeviceData={onRefreshDeviceData}/>}/>\r\n                <Route exact path='/device/:device_id/createSensor' render={props => user && <SensorCreate {...props} onCreateSensor={onCreateSensor}/>}/>\r\n                <Route exact path='/device/:device_id/deleteDevice' render={props => user && <DeviceDelete {...props} device={user.devices.find(d => d._id === props.match.params.device_id)} onDeleteDevice={onDeleteDevice}/>}/>\r\n                <Route exact path='/device/:device_id/renameDevice' render={props => user && <DeviceRename {...props} device={user.devices.find(d => d._id === props.match.params.device_id)} onRenameDevice={onRenameDevice}/>}/>\r\n                <Route exact path='/device/:device_id/sensor/:sensor_id' render={props => user &&\r\n                    <Sensor {...props}\r\n                        sensor={\r\n                            user\r\n                                .devices.find(d => d._id === props.match.params.device_id)\r\n                                .sensors.find(s => s._id === props.match.params.sensor_id)\r\n                        }\r\n                        onRefreshSensorData={onRefreshSensorData}\r\n                    />\r\n                }/>\r\n                <Route exact path='/device/:device_id/sensor/:sensor_id/editSensor' render={props => user &&\r\n                    <SensorEdit {...props}\r\n                        sensor={\r\n                            user\r\n                                .devices.find(d => d._id === props.match.params.device_id)\r\n                                .sensors.find(s => s._id === props.match.params.sensor_id)\r\n                        }\r\n                        onEditSensor={onEditSensor}\r\n                    />\r\n                }/>\r\n                <Route exact path='/device/:device_id/sensor/:sensor_id/deleteSensor' render={props => user &&\r\n                    <SensorDelete {...props}\r\n                        sensor={\r\n                            user\r\n                                .devices.find(d => d._id === props.match.params.device_id)\r\n                                .sensors.find(s => s._id === props.match.params.sensor_id)\r\n                        }\r\n                        onDeleteSensor={onDeleteSensor}\r\n                    />\r\n                }/>\r\n            </Switch>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n\r\n","import React from 'react';\r\n\r\nconst Alert = props => {\r\n    const {message, onAlertClose} = props;\r\n    const onAlertCloseClick = e => {\r\n        e.preventDefault();\r\n        onAlertClose();\r\n    };\r\n    return (\r\n        <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n            <span>{message}</span>\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={onAlertCloseClick}>\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Alert;","import fetch from 'isomorphic-fetch';\r\n\r\nconst api = {\r\n    login: (username, password) => {\r\n        const data = {username, password};\r\n        const opt = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        };\r\n        const url = '/api/v1/auth/login';\r\n        return fetch(url, opt)\r\n            .then(res => {\r\n                const promise = res.json();\r\n                return res.ok ? promise : promise.then(err => {throw new Error(err.message)});\r\n            });\r\n    },\r\n\r\n    logout: (user_id, session_token) => {\r\n        const data = {user_id, session_token};\r\n        const opt = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        };\r\n        const url = '/api/v1/auth/logout';\r\n        return fetch(url, opt)\r\n            .then(res => {\r\n                const promise = res.json();\r\n                return res.ok ? promise : promise.then(err => {throw new Error(err.message)});\r\n            });\r\n\r\n    },\r\n\r\n    registrate: (username, password, email) => {\r\n        const data = {username, password, email};\r\n        const opt = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        };\r\n        const url = '/api/v1/auth/registrate';\r\n        return fetch(url, opt)\r\n            .then(res => {\r\n                const promise = res.json();\r\n                return res.ok ? promise : promise.then(err => {throw new Error(err.message)});\r\n            });\r\n    },\r\n\r\n    getUserById: (user_id, session_token) => {\r\n        const opt = {\r\n            method: 'GET',\r\n        };\r\n        const url = `/api/v1/user/${user_id}?session_token=${session_token}`;\r\n        return fetch(url, opt)\r\n            .then(res => {\r\n                const promise = res.json();\r\n                return res.ok ? promise : promise.then(err => {throw new Error(err.message)});\r\n            });\r\n    },\r\n\r\n    getDeviceList: (user_id, session_token) => {\r\n        const opt = {\r\n            method: 'GET',\r\n        };\r\n        const url = `/api/v1/user/${user_id}/device?session_token=${session_token}`;\r\n        return fetch(url, opt)\r\n            .then(res => {\r\n                const promise = res.json();\r\n                return res.ok ? promise : promise.then(err => {throw new Error(err.message)});\r\n            });\r\n\r\n    },\r\n\r\n    createNewDevice: (user_id, session_token, name) => {\r\n        const data = {name, session_token};\r\n        const opt = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        };\r\n        const url = `/api/v1/user/${user_id}/device`;\r\n        return fetch(url, opt)\r\n            .then(res => {\r\n                const promise = res.json();\r\n                return res.ok ? promise : promise.then(err => {throw new Error(err.message)});\r\n            });\r\n    },\r\n\r\n    deleteDevice: (user_id, device_id, session_token) => {\r\n        const data = {session_token};\r\n        const opt = {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        };\r\n        const url = `/api/v1/user/${user_id}/device/${device_id}`;\r\n        return fetch(url, opt)\r\n            .then(res => {\r\n                const promise = res.json();\r\n                return res.ok ? promise : promise.then(err => {throw new Error(err.message)});\r\n            });\r\n    },\r\n\r\n    createNewSensor: (user_id, device_id, session_token, name, units) => {\r\n        const data = {session_token, name, units};\r\n        const opt = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        };\r\n        const url = `/api/v1/user/${user_id}/device/${device_id}/sensor`;\r\n        return fetch(url, opt)\r\n            .then(res => {\r\n                const promise = res.json();\r\n                return res.ok ? promise : promise.then(err => {throw new Error(err.message)});\r\n            });\r\n    },\r\n\r\n    renameDevice: (user_id, device_id, session_token, name) => {\r\n        const data = {session_token, name};\r\n        const opt = {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        };\r\n        const url = `/api/v1/user/${user_id}/device/${device_id}`;\r\n        return fetch(url, opt)\r\n            .then(res => {\r\n                const promise = res.json();\r\n                return res.ok ? promise : promise.then(err => {throw new Error(err.message)});\r\n            });\r\n    },\r\n\r\n    editSensor: (user_id, device_id, sensor_id, session_token, name, units) => {\r\n        const data = {session_token, name, units};\r\n        const opt = {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        };\r\n        const url = `/api/v1/user/${user_id}/device/${device_id}/sensor/${sensor_id}`;\r\n        return fetch(url, opt)\r\n            .then(res => {\r\n                const promise = res.json();\r\n                return res.ok ? promise : promise.then(err => {throw new Error(err.message)});\r\n            });\r\n    },\r\n\r\n    deleteSensor: (user_id, device_id, sensor_id, session_token) => {\r\n        const data = {session_token};\r\n        const opt = {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        };\r\n        const url = `/api/v1/user/${user_id}/device/${device_id}/sensor/${sensor_id}`;\r\n        return fetch(url, opt)\r\n            .then(res => {\r\n                const promise = res.json();\r\n                return res.ok ? promise : promise.then(err => {throw new Error(err.message)});\r\n            });\r\n    },\r\n\r\n    getSensorInfoById: (user_id, device_id, sensor_id, session_token) => {\r\n        const opt = {\r\n            method: 'GET'\r\n        };\r\n        const url = `/api/v1/user/${user_id}/device/${device_id}/sensor/${sensor_id}?session_token=${session_token}`;\r\n        return fetch(url, opt)\r\n            .then(res => {\r\n                const promise = res.json();\r\n                return res.ok ? promise : promise.then(err => {throw new Error(err.message)});\r\n            });\r\n    },\r\n\r\n    getDeviceInfoById: (user_id, device_id, session_token) => {\r\n        const opt = {\r\n            method: 'GET'\r\n        };\r\n        const url = `/api/v1/user/${user_id}/device/${device_id}?session_token=${session_token}`;\r\n        return fetch(url, opt)\r\n            .then(res => {\r\n                const promise = res.json();\r\n                return res.ok ? promise : promise.then(err => {throw new Error(err.message)});\r\n            });\r\n    }\r\n};\r\n\r\nexport default api;","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Alert from './components/Alert';\n\nimport api from './lib/api';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      session_token: null,\n      message: null\n    }\n  }\n\n  componentDidMount() {\n    this.props.history.push('/login');\n  }\n\n  handlerLogin = (username, password) => {\n    api.login(username, password)\n      .then(res => {\n        const {user_id, session_token} = res;\n        if (user_id && session_token) {\n          api.getUserById(user_id, session_token)\n            .then(user => {\n              this.setState({user, session_token}, () => {\n                this.props.history.push('/data');\n              })\n            })\n            .catch(err => {\n              this.setState({message: err.message});\n            });\n        }\n        else {\n          throw new Error('Incorrect response data');\n        }\n      })\n      .catch(err => {\n        this.setState({message: err.message});\n      });\n  }\n\n  handlerLogout = () => {\n    // if (!this.state.user || !this.state.session_token) return;\n    // const user_id = this.state.user._id;\n    // const session_token = this.state.session_token;\n    // api.logout(user_id, session_token)\n    //   .then(res => {\n    //     console.log(res);\n    //     this.setState({user: null, session_token: null}, () => {\n    //       this.props.history.push('/login');\n    //     });\n    //   })\n    //   .catch(err => this.setState({message: err.message}));\n    \n    this.setState({user: null, session_token: null, message: null});\n    this.props.history.push('/login');    \n  }\n\n  handlerAlertClose = () => this.setState({message: null});\n\n  //handleMessageClose = () => this.setState({message: null});\n\n  handleSubmitRegistrateForm = (username, password, email) => {\n    api.registrate(username, password, email)\n      .then(res => {\n        this.setState({message: 'Registration success.'}, () => {\n          this.props.history.push('/login');\n        })\n      })\n      .catch(err => {\n        this.setState({message: err.message})\n      });\n  }\n\n  handleCreateNewDevice = name => {\n    if (!name) {\n      this.setState({message: 'Incorrect new device name'});\n    }\n    else {\n      const {user} = this.state;\n      api.createNewDevice(user._id, this.state.session_token, name)\n        .then(device => {\n          const devices = [...user.devices, device];\n          const newUser = {...user, devices};\n          this.setState({user: newUser, message: `Device ${name} created.`});\n        })\n        .catch(err => {\n          this.setState({message: err.message});\n        });\n    }\n  }\n\n  handleDeleteDevice = (device_id, isSubmit) => {\n    if (isSubmit) {\n      const {user, session_token} = this.state;\n      api.deleteDevice(user._id, device_id, session_token)\n        .then(res => {\n          const devices = [...user.devices].filter(d => d._id !== device_id);\n          const newUser = {...user, devices};\n          this.props.history.push('/device');\n          this.setState({user: newUser, message: 'Device deleted'});\n        })\n        .catch(err => this.setState({message: err.message}));\n    }\n    else {\n      this.props.history.goBack();\n    }\n\n  }\n\n  setErrorMessage = message => this.setState({message});\n\n  isAuthenticated = () => this.state.session_token != null;\n\n  handleCreateNewSensor = (device_id, name, units) => {\n    if (!device_id || !name || !units) {\n      this.setState({message: 'Incorrect sensor name or units'});\n    }\n    else {\n      const {user, session_token} = this.state;\n      const user_id = user._id;\n      api.createNewSensor(user_id, device_id, session_token, name, units)\n        .then(sensor => {\n          const newUser = {...user};\n          newUser.devices.find(d => d._id === device_id).sensors.push(sensor);\n          this.setState({...this.state, user: newUser, message: 'Sensor created'}, () => {\n            this.props.history.push(`/device/${device_id}`);\n          });\n        })\n        .catch(err => this.setState({message: err.message}));\n    }\n  }\n\n  handleRenameDevice = (device_id, name) => {\n    const {user, session_token} = this.state;\n    api.renameDevice(user._id, device_id, session_token, name)\n      .then(device => {\n        const newUser = {...user};\n        newUser.devices.find(d => d._id === device_id).name = device.name;\n        this.props.history.goBack();\n        this.setState({...this.state, user: newUser, message: 'Device renamed'});\n      })\n      .catch(err => this.setState({...this.state, message: err.message}));\n  }\n\n  handleEditSensor = (device_id, sensor_id, name, units) => {\n    const {user, session_token} = this.state;\n    api.editSensor(user._id, device_id, sensor_id, session_token, name, units)\n      .then(newSensor => {\n        const newUser = {...user};\n        const sensor = newUser\n          .devices.find(d => d._id === device_id)\n          .sensors.find(s => s._id === sensor_id);\n        sensor.name = newSensor.name;\n        sensor.units = newSensor.units;\n        this.props.history.goBack();\n        this.setState({...this.state, user: newUser, message: 'Sensor updated'});\n      })\n      .catch(err => this.setState({...this.state, message: err.message}));\n  }\n\n  handleDeleteSensor = (device_id, sensor_id, isSubmit) => {\n    if (isSubmit) {\n      const {user, session_token} = this.state;\n      api.deleteSensor(user._id, device_id, sensor_id, session_token)\n        .then(result => {\n          const newUser = {...user};\n          const sensors = newUser\n            .devices.find(d => d._id === device_id)\n            .sensors.filter(s => s._id !== sensor_id);\n          const device = newUser.devices.find(d => d._id === device_id);\n          device.sensors = sensors;\n          this.props.history.push(`/device/${device_id}`);\n          this.setState({...this.state, user: newUser, message: 'Sensor deleted'});\n        })\n        .catch(err => this.setState({...this.state, message: err.message}));\n    }\n    else {\n      this.props.history.goBack();\n    }\n  }\n\n  handlerRefreshAllData = () => {\n    const {user, session_token} = this.state;\n    api.getUserById(user._id, session_token)\n      .then(user => this.setState({user, session_token}))\n      .catch(err => this.setState({...this.state, message: err.message}));\n  }\n\n  handleRefreshSensorData = (device_id, sensor_id) => {\n    const {user, session_token} = this.state;\n    api.getSensorInfoById(user._id, device_id, sensor_id, session_token)\n      .then(sensor => {\n        const newUser = {...user};\n        const device = newUser.devices.find(d => d._id === device_id);\n        const sensors = device.sensors.map(s => s._id === sensor_id ? sensor : s);\n        device.sensors = sensors;\n        this.setState({...this.state, user: newUser});\n      })\n      .catch(err => this.setState({...this.state, message: err.message}));\n  }\n\n  handleRefreshDeviceData = device_id => {\n    const {user, session_token} = this.state;\n    api.getDeviceInfoById(user._id, device_id, session_token)\n      .then(device => {\n        const devices = user.devices.map(d => d._id === device_id ? device : d);\n        const newUser = {...user, devices};\n        this.setState({...this.state, user: newUser});\n      })\n      .catch(err => this.setState({...this.state, message: err.message}));\n  }\n\n  render() {\n    const {user, message} = this.state;\n    return (\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <Header user={user} onLogout={this.handlerLogout}/>\n          {\n            message && <Alert message={message} onAlertClose={this.handlerAlertClose}/>\n          }\n          <Main\n            user={user}\n            isAuthenticated={this.isAuthenticated}\n            onLogin={this.handlerLogin}\n            setErrorMessage={this.setErrorMessage}\n            onSubmitRegistrateForm={this.handleSubmitRegistrateForm}\n            onCreateNewDevice={this.handleCreateNewDevice}\n            onDeleteDevice={this.handleDeleteDevice}\n            onCreateSensor={this.handleCreateNewSensor}\n            onRenameDevice={this.handleRenameDevice}\n            onEditSensor={this.handleEditSensor}\n            onDeleteSensor={this.handleDeleteSensor}\n            onRefreshAllData={this.handlerRefreshAllData}\n            onRefreshSensorData={this.handleRefreshSensorData}\n            onRefreshDeviceData={this.handleRefreshDeviceData}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap';\n\nReactDOM.render(<BrowserRouter><App/></BrowserRouter>, document.getElementById('root'));"],"sourceRoot":""}